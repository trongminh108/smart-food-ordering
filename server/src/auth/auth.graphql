# type UserAuth {
#   id
#   username: String
#   full_name: String
#   gmail: String
#   avatar: String
#   phone_number: String
#   current_address: String
#   delivery_address: String
#   position: [Float]
#   is_agent: Boolean
#   is_deliver: Boolean
#   face_recognition: String
# }

type Auth {
  # Example field (placeholder)
  token: String
  user: User
}

# input CreateAuthInput {
#   # Example field (placeholder)
#   exampleField: Int
# }

# input UpdateAuthInput {
#   id: Int!
# }

# type Query {
#   auths: [Auth]!
#   auth(id: Int!): Auth
# }

type ErrorMessage {
  message: String!
}

type Mutation {
  # createAuth(createAuthInput: CreateAuthInput!): Auth!
  # updateAuth(updateAuthInput: UpdateAuthInput!): Auth!
  # removeAuth(id: Int!): Auth
  login(username: String!, password: String!): Auth!
  loginWithFaceID(face_id: String!): Auth!
  register(username: String!, password: String!, gmail: String!): User!
}
